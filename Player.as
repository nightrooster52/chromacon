package {	import flash.display.Sprite;	import flash.text.TextField;	public class Player extends Sprite {		public var redDude:Dude = new Dude();		public var redHealth:TextField = new TextField();		public var blueDude:Dude = new Dude();		public var blueHealth:TextField = new TextField();		public var yellowDude:Dude = new Dude();		public var yellowHealth:TextField = new TextField();		public var shieldSprite:Sprite = new Sprite();		public var shieldText:TextField = new TextField();				public var shields:int = 20;		public var maxShields:int = 20;		public function Player() {			// constructor code			makeDudes();		}		public function makeDudes():void {						shieldSprite.x = 80;			addChild(shieldSprite);			shieldText.y = -20;			shieldText.x = 80;			addChild(shieldText);						addChild(redDude);			redHealth.y = 20;			addChild(redHealth);						blueDude.y = 40;			addChild(blueDude);			blueHealth.y = blueDude.y + 20;			addChild(blueHealth);						yellowDude.y = 80;			addChild(yellowDude);			yellowHealth.y = yellowDude.y + 20;			addChild(yellowHealth);			redDude.graphics.beginFill(0xFF0000, 1);			redDude.graphics.drawRect(0, 0, 20, 20);			blueDude.graphics.beginFill(0x0000FF, 1);			blueDude.graphics.drawRect(0, 0, 20, 20);			yellowDude.graphics.beginFill(0xFFFF00, 1);			yellowDude.graphics.drawRect(0, 0, 20, 20);						updateFields();		}		public function takeHealthDamage(damage:int):void {			damage -= shields;			if (damage < 0){				damage = 0;				trace("took no damage");				return;			}			var numHit:int = 0;			var hitArray:Array = new Array();						if (redDude.position == "forward"){				numHit += 1;				hitArray.push(redDude);			}			if (blueDude.position == "forward"){				numHit += 1;				hitArray.push(blueDude);			}			if (yellowDude.position == "forward"){				numHit += 1;				hitArray.push(yellowDude);			}			//they were all back...this shouldn't happen, but if it does they all recieve full damage			if (numHit == 0){				redDude.health -= damage;				blueDude.health -= damage;				yellowDude.health -= damage;			}else{				damage /= numHit;				for (var i:int = 0; i < numHit; i++){					hitArray[i].health -= damage;					var txt:FadeText = new FadeText("healthDamage", damage);					txt.x = 20;					hitArray[i].addChild(txt);				}			}							trace("split damage between forward characters");					}		public function takeShieldDamage(damage:int):void {			shields -= damage;			var txt:FadeText = new FadeText("armorDamage", damage);			txt.x = 20;			shieldSprite.addChild(txt);						if (shields < 0){				shields = 0;			}			updateFields()					}		public function heal(amount:int):void {			//how does this work now?		}		public function buildShields(amount:int):void {			shields += amount;			if (shields > maxShields){				shields = maxShields;			}			var txt:FadeText = new FadeText("armorBuild", amount);			txt.x = 20;			shieldSprite.addChild(txt);			updateFields();		}				public function redForward():void {			redDude.position = "forward";			redDude.x = 50;			//trace("red forward");					}		public function redBack():void {			redDude.position = "back";			redDude.x = 0;			//trace('red back');		}		public function blueForward():void {			blueDude.position = "forward";			blueDude.x = 50;			//trace('blue forward');		}		public function blueBack():void {			blueDude.position = "back";			blueDude.x = 0;			//trace('blue back');		}		//only call updateFields in yellow because yellow is the last color to be moved					public function yellowForward():void {			yellowDude.position = "forward";			yellowDude.x = 50;			//trace('yellow forward');			updateFields();  		}		public function yellowBack():void {			yellowDude.position = "back";			yellowDude.x = 0;			//trace('yellow back');			updateFields();		}				public function updateFields(){			redHealth.x = redDude.x;			redHealth.text = redDude.health.toString();						blueHealth.x = blueDude.x;			blueHealth.text = blueDude.health.toString();						yellowHealth.x = yellowDude.x;			yellowHealth.text = yellowDude.health.toString();						shieldSprite.graphics.clear();			shieldSprite.graphics.beginFill(0x00FFFF, 1);			shieldSprite.graphics.drawRect(0, 0, shields, 150);			shieldText.text = shields.toString();								}			}}
package {	import flash.display.Sprite;	import flash.text.TextField;		public class Enemy extends Sprite {		public var main:Prototype;		public var effects:Array = new Array();		public var health:int = 100;		public var maxHealth:int = 100;		public var armor:int = 20;		public var maxArmor:int = 20;		public var healthText:TextField = new TextField();		public var armorText:TextField = new TextField();		public function Enemy(main:Prototype) {			// constructor code			this.main = main;						graphics.beginFill(0x000000, 1);			graphics.drawRect(0, 0, 40, 40);			healthText.y = 40;			addChild(healthText);			armorText.y = 60;			addChild(armorText);			updateTextFields();						setupEffects();		}				public function setupEffects():void{			effects.push(new Effect(main));			effects.push(new Effect(main));			effects.push(new Effect(main));						effects[0].healthDamage = 5;			effects[1].armorDamage = 2;			effects[2].shielding = 2;		}		public function randomAction():void{			//do random action			var choice:int = Math.random()*3;						//roughly 2d6			var amount:int = Math.random()*6 + Math.random()*6;						//effects[choice].enemyActivate(amount);			effects[0].enemyActivate(amount);		}				public function takeHealthDamage(damage:int):void {			damage -=  armor;			if (damage < 0) {				damage = 0;			}			var txt:FadeText = new FadeText("healthDamage", damage);						addChild(txt);			health -=  damage;			//trace("enemy took ", damage, " damage");			//trace("enemy HEALTH: ",health);			updateTextFields();			if (health <0 ){				main.enemyDefeated(this);			}		}				public function takeArmorDamage(damage:int):void {			armor -=  damage;			if (armor < 0) {				armor = 0;			}						addChild(new FadeText("armorDamage", damage));			//trace("enemy took ", damage, " armor damage");			//trace("enemy ARMOR: ",armor);			updateTextFields();		}				public function heal(amount:int):void {			health +=  amount;			if (health > maxHealth) {				health = maxHealth;			}						addChild(new FadeText("healing", amount));			//trace("enemy healed ", amount);			//trace("enemy HEALTH", health);			updateTextFields();		}				public function buildArmor(amount:int):void {			armor +=  amount;			if (armor > maxArmor) {				armor = maxArmor;			}			addChild(new FadeText("armorBuild", amount));			//trace("enemy built ", amount, "armor");			//trace("enemy Armor ", armor);			updateTextFields();		}		public function updateTextFields():void{			healthText.text = "HEALTH: " + health.toString();			armorText.text = "ARMOR: " + armor.toString();		}	}}